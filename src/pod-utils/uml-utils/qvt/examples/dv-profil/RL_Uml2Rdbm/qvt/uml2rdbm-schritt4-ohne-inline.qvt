/*
 * In diesem Beispiel sind die Domänenmuster soweit ausformuliert,
 * dass ein Zielmodell erzeugt wird, in dem für jedes Element des
 * Quellmodells eines im Zielmodell angelegt wird; dabei wird der
 * Name des Quellmodells übernommen. Auf die Behandlung komplexer
 * Modellelemente - Primärschlüssel, Fremdschlüssel - wird verzichtet.
 * Es soll allerdings bereits implementiert werden, dass Bedingungen 
 * geprüft werden.
 */
transformation uml2rdbms ( uml : MyUML, rdbm : MyRDBM ) 
{
    /* */
	top relation PackageToSchema 
	{
	   packageName : String;
	   checkonly domain uml  pck : Package { name = packageName };
	   enforce   domain rdbm sma : Schema  { name = packageName };
	}
	
    /* */
	top relation ClassToTable 
	{
	   className : String;
	   
	   checkonly domain uml  cls : Class  
	   {
	      namespace = pck : Package { }, 
	      name      = className 
	   };
       
       enforce   domain rdbm tbl : Table  
       {
          schema    = sma : Schema {},   
          name      = className
       };
	   
	   when	 { PackageToSchema   (pck, sma); }
	   where { AttributeToColumn (cls, tbl); }
	}
	
    /* */
	top relation DataTypeToTable 
	{
	   dTypeName : String;

	   checkonly domain uml  dtype : PrimitiveDataType  
	   {
	      namespace = pck : Package {}, 
	      name      = dTypeName 
	   };
       
       enforce   domain rdbm tbl : Table  
       {
          schema    = sma : Schema {},   
          name      = dTypeName
       };
	   
	   when	{ PackageToSchema(pck, sma); }
	}
	
    /* */
	top relation AssocToTable 
	{
	   associationName : String;
	   sourceClassName : String;
	   destClassName   : String;
	  
	   checkonly domain uml ass : Association 
	   {
         namespace   = pck : Package {},
	     name        = associationName,
	     
	     -- Dies sind bereits Inline-Templates, um die referenzierten
	     -- Klassen zu bestimmen. 
	     source      = srcCls : Class { name = sourceClassName },
	     destination = dstCls : Class { name = destClassName   }
	   };
	  
	   enforce domain rdbm tab : Table  
	   {
	      schema  = sma : Schema {}, 
	      name    = associationName, 

	     -- Dies sind bereits Inline-Templates, um für die referenzierten
	     -- Tabellen identifizierende Attribute anzulegen. 
          column  = srcclm : Column { name = sourceClassName + '_ID' },
          column  = dstclm : Column { name = destClassName   + '_ID' }
 	   };
 
       when {  PackageToSchema ( pck, sma );  }
	}

    /* */
	relation AttributeToColumn 
	{
 	  attrName : String;
 	  
	  checkonly domain uml cls : Class 
	  {
	    attribute = att : Attribute { name = attrName  }
	  };
	  
	  enforce   domain rdbm tbl : Table 
	  {
	    column    = clm : Column    { name = attrName  }
	  };
	}
}
