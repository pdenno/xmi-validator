<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:mofext="http://www.omg.org/spec/MOF/20131001" xmlns:uml="http://www.omg.org/spec/UML/20131001">
  <uml:Package xmi:type="uml:Package" xmi:id="QVTBase" name="QVTBase" URI="http://www.omg.org/spec/QVT/20140401/QVTBase">
    <packagedElement xmi:type="uml:Class" xmi:id="Domain" name="Domain" isAbstract="true">
      <generalization xmi:id="G_Domain_NamedElement">
        <general xmi:type="uml:Class" href="EMOF.xmi#NamedElement"/>
      </generalization>
      <ownedAttribute xmi:id="Domain.isCheckable" name="isCheckable" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Domain.isEnforceable" name="isEnforceable" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="PrimitiveTypes.xmi#Boolean"/>
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Domain.rule" name="rule" type="Rule" association="A_Domain.rule_Rule.domain"/>
      <ownedAttribute xmi:id="Domain.typedModel" name="typedModel" type="TypedModel" association="A_Domain.typedModel_domain">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Function" name="Function">
      <generalization xmi:id="G_Function_Operation">
        <general xmi:type="uml:Class" href="EMOF.xmi#Operation"/>
      </generalization>
      <ownedAttribute xmi:id="Function.queryExpression" name="queryExpression" aggregation="composite" association="A_Function.queryExpression_function">
        <type xmi:type="uml:Class" href="EssentialOCL.xmi#OclExpression"/>
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="FunctionParameter" name="FunctionParameter">
      <generalization xmi:id="G_FunctionParameter_Parameter">
        <general xmi:type="uml:Class" href="EMOF.xmi#Parameter"/>
      </generalization>
      <generalization xmi:id="G_FunctionParameter_Variable">
        <general xmi:type="uml:Class" href="EssentialOCL.xmi#Variable"/>
      </generalization>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Pattern" name="Pattern">
      <generalization xmi:id="G_Pattern_Element">
        <general xmi:type="uml:Class" href="EMOF.xmi#Element"/>
      </generalization>
      <ownedAttribute xmi:id="Pattern.bindsTo" name="bindsTo" association="A_Pattern.bindsTo_pattern">
        <type xmi:type="uml:Class" href="EssentialOCL.xmi#Variable"/>
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Pattern.predicate" name="predicate" type="Predicate" aggregation="composite" association="A_Pattern.predicate_Predicate.pattern">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Predicate" name="Predicate">
      <generalization xmi:id="G_Predicate_Element">
        <general xmi:type="uml:Class" href="EMOF.xmi#Element"/>
      </generalization>
      <ownedAttribute xmi:id="Predicate.conditionExpression" name="conditionExpression" aggregation="composite" association="A_Predicate.conditionExpression_predicate">
        <type xmi:type="uml:Class" href="EssentialOCL.xmi#OclExpression"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Predicate.pattern" name="pattern" type="Pattern" association="A_Pattern.predicate_Predicate.pattern"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Rule" name="Rule" isAbstract="true">
      <generalization xmi:id="G_Rule_NamedElement">
        <general xmi:type="uml:Class" href="EMOF.xmi#NamedElement"/>
      </generalization>
      <ownedAttribute xmi:id="Rule.domain" name="domain" type="Domain" isOrdered="true" aggregation="composite" association="A_Domain.rule_Rule.domain">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Rule.overrides" name="overrides" type="Rule" association="A_Rule.overrides_overridden">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Rule.transformation" name="transformation" type="Transformation" association="A_Rule.transformation_Transformation.rule">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="Transformation" name="Transformation">
      <generalization xmi:id="G_Transformation_Class">
        <general xmi:type="uml:Class" href="EMOF.xmi#Class"/>
      </generalization>
      <generalization xmi:id="G_Transformation_Package">
        <general xmi:type="uml:Class" href="EMOF.xmi#Package"/>
      </generalization>
      <ownedAttribute xmi:id="Transformation.extends" name="extends" type="Transformation" association="A_Transformation.extends_extendedBy">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transformation.modelParameter" name="modelParameter" type="TypedModel" aggregation="composite" association="A_Transformation.modelParameter_TypedModel.transformation">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transformation.ownedTag" name="ownedTag" aggregation="composite" association="A_Transformation.ownedTag_transformation">
        <type xmi:type="uml:Class" href="EMOF.xmi#Tag"/>
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="Transformation.rule" name="rule" type="Rule" aggregation="composite" association="A_Rule.transformation_Transformation.rule">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="TypedModel" name="TypedModel">
      <generalization xmi:id="G_TypedModel_NamedElement">
        <general xmi:type="uml:Class" href="EMOF.xmi#NamedElement"/>
      </generalization>
      <ownedAttribute xmi:id="TypedModel.dependsOn" name="dependsOn" type="TypedModel" association="A_TypedModel.dependsOn_dependent">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:id="TypedModel.transformation" name="transformation" type="Transformation" association="A_Transformation.modelParameter_TypedModel.transformation"/>
      <ownedAttribute xmi:id="TypedModel.usedPackage" name="usedPackage" association="A_TypedModel.usedPackage_typedModel">
        <type xmi:type="uml:Class" href="EMOF.xmi#Package"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Domain.rule_Rule.domain" name="A_Domain.rule_Rule.domain" memberEnd="Rule.domain Domain.rule"/>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Domain.typedModel_domain" name="A_Domain.typedModel_domain" memberEnd="Domain.typedModel A_Domain.typedModel_domain.domain">
      <ownedEnd xmi:id="A_Domain.typedModel_domain.domain" name="domain" type="Domain" association="A_Domain.typedModel_domain">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Function.queryExpression_function" name="A_Function.queryExpression_function"
        memberEnd="Function.queryExpression A_Function.queryExpression_function.function">
      <ownedEnd xmi:id="A_Function.queryExpression_function.function" name="function" type="Function" association="A_Function.queryExpression_function">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Pattern.bindsTo_pattern" name="A_Pattern.bindsTo_pattern" memberEnd="Pattern.bindsTo A_Pattern.bindsTo_pattern.pattern">
      <ownedEnd xmi:id="A_Pattern.bindsTo_pattern.pattern" name="pattern" type="Pattern" association="A_Pattern.bindsTo_pattern">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Pattern.predicate_Predicate.pattern" name="A_Pattern.predicate_Predicate.pattern"
        memberEnd="Pattern.predicate Predicate.pattern"/>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Predicate.conditionExpression_predicate" name="A_Predicate.conditionExpression_predicate"
        memberEnd="Predicate.conditionExpression A_Predicate.conditionExpression_predicate.predicate">
      <ownedEnd xmi:id="A_Predicate.conditionExpression_predicate.predicate" name="predicate" type="Predicate" association="A_Predicate.conditionExpression_predicate">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Rule.overrides_overridden" name="A_Rule.overrides_overridden" memberEnd="Rule.overrides A_Rule.overrides_overridden.overridden">
      <ownedEnd xmi:id="A_Rule.overrides_overridden.overridden" name="overridden" type="Rule" association="A_Rule.overrides_overridden">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Rule.transformation_Transformation.rule" name="A_Rule.transformation_Transformation.rule"
        memberEnd="Transformation.rule Rule.transformation"/>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Transformation.extends_extendedBy" name="A_Transformation.extends_extendedBy"
        memberEnd="Transformation.extends A_Transformation.extends_extendedBy.extendedBy">
      <ownedEnd xmi:id="A_Transformation.extends_extendedBy.extendedBy" name="extendedBy" type="Transformation" association="A_Transformation.extends_extendedBy">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Transformation.modelParameter_TypedModel.transformation" name="A_Transformation.modelParameter_TypedModel.transformation"
        memberEnd="Transformation.modelParameter TypedModel.transformation"/>
    <packagedElement xmi:type="uml:Association" xmi:id="A_Transformation.ownedTag_transformation" name="A_Transformation.ownedTag_transformation"
        memberEnd="Transformation.ownedTag A_Transformation.ownedTag_transformation.transformation">
      <ownedEnd xmi:id="A_Transformation.ownedTag_transformation.transformation" name="transformation" type="Transformation" association="A_Transformation.ownedTag_transformation">
        <lowerValue xmi:type="uml:LiteralInteger"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_TypedModel.dependsOn_dependent" name="A_TypedModel.dependsOn_dependent" memberEnd="TypedModel.dependsOn A_TypedModel.dependsOn_dependent.dependent">
      <ownedEnd xmi:id="A_TypedModel.dependsOn_dependent.dependent" name="dependent" type="TypedModel" association="A_TypedModel.dependsOn_dependent">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedEnd>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="A_TypedModel.usedPackage_typedModel" name="A_TypedModel.usedPackage_typedModel"
        memberEnd="TypedModel.usedPackage A_TypedModel.usedPackage_typedModel.typedModel">
      <ownedEnd xmi:id="A_TypedModel.usedPackage_typedModel.typedModel" name="typedModel" type="TypedModel" association="A_TypedModel.usedPackage_typedModel">
        <lowerValue xmi:type="uml:LiteralInteger"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" value="*"/>
      </ownedEnd>
    </packagedElement>
  </uml:Package>
  <mofext:Tag xmi:type="mofext:Tag" name="org.omg.xmi.nsPrefix" value="qvtbase" element="QVTBase"/>
</xmi:XMI>
