<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xmi:XMI xmlns:xmi="http://schema.omg.org/spec/XMI/2.1" xmlns:uml="http://www.omg.org/spec/UML/20090901">
  <uml:Model xmi:id="A_Data">
    <name>Data</name>
    <packagedElement xmi:type="uml:Package" xmi:id="A_Data-Classes">
      <name>Classes</name>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-AccumulateException">
        <name>AccumulateException</name>
        <generalization xmi:type="uml:Generalization" xmi:id="B_Generalization_Data.Classes.AccumulateException_-1">
          <general xmi:idref="A_Data-Classes-Exception"/>
        </generalization>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-Class1">
        <name>Class1</name>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class1-getCollection">
          <name>getCollection</name>
          <raisedException xmi:idref="A_Data-Classes-GetException"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="B_Parameter_Data.Classes.Class1.getCollection_-1">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.Classes.Class1.getCollection.._UNLIMNAT-1">
              <value>*</value>
            </upperValue>
            <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.Classes.Class1.getCollection.._0-1"/>
            <type xmi:idref="A_Data-Classes-Class2"/>
            <direction>return</direction>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-Class2">
        <name>Class2</name>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class2-isUpdatable">
          <name>isUpdatable</name>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="B_Parameter_Data.Classes.Class2.isUpdatable_-1">
            <type href="http://www.omg.org/spec/UML/20090901/UML.xmi#Boolean"> </type>
            <direction>return</direction>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class2-update">
          <name>update</name>
          <raisedException xmi:idref="A_Data-Classes-UpdateException"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="B_Parameter_Data.Classes.Class2.update_-1">
            <type xmi:idref="A_Data-Classes-Class2"/>
            <direction>return</direction>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-Class2Iterator">
        <name>Class2Iterator</name>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class2Iterator-iterate">
          <name>iterate</name>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="B_Parameter_Data.Classes.Class2Iterator.iterate_-1">
            <type xmi:idref="A_Data-Classes-Class2Iterator"/>
            <direction>return</direction>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="A_Data-Classes-Class2Iterator-iterate-collection">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.Classes.Class2Iterator.iterate.collection_UNLIMNAT-1">
              <value>*</value>
            </upperValue>
            <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.Classes.Class2Iterator.iterate.collection_0-1"/>
            <name>collection</name>
            <type xmi:idref="A_Data-Classes-Class2"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class2Iterator-next">
          <name>next</name>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="B_Parameter_Data.Classes.Class2Iterator.next_-1">
            <type xmi:idref="A_Data-Classes-Class2"/>
            <direction>return</direction>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class2Iterator-done">
          <name>done</name>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="B_Parameter_Data.Classes.Class2Iterator.done_-1">
            <type href="http://www.omg.org/spec/UML/20090901/UML.xmi#Boolean"> </type>
            <direction>return</direction>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-Class3">
        <name>Class3</name>
        <ownedOperation xmi:type="uml:Operation" xmi:id="A_Data-Classes-Class3-accumulate">
          <name>accumulate</name>
          <raisedException xmi:idref="A_Data-Classes-AccumulateException"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="A_Data-Classes-Class3-accumulate-x">
            <name>x</name>
            <type xmi:idref="A_Data-Classes-Class2"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-Exception">
        <name>Exception</name>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-GeneralException">
        <name>GeneralException</name>
        <generalization xmi:type="uml:Generalization" xmi:id="B_Generalization_Data.Classes.GeneralException_-1">
          <general xmi:idref="A_Data-Classes-Exception"/>
        </generalization>
        <ownedAttribute xmi:type="uml:Property" xmi:id="A_Data-Classes-GeneralException-nestedException">
          <name>nestedException</name>
          <type xmi:idref="A_Data-Classes-Exception"/>
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="L_Data.Classes.GeneralException.nestedException_0-1"/>
          <association xmi:idref="B_Association_Data.Classes_-1"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-GetException">
        <name>GetException</name>
        <generalization xmi:type="uml:Generalization" xmi:id="B_Generalization_Data.Classes.GetException_-1">
          <general xmi:idref="A_Data-Classes-Exception"/>
        </generalization>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="A_Data-Classes-UpdateException">
        <name>UpdateException</name>
        <generalization xmi:type="uml:Generalization" xmi:id="B_Generalization_Data.Classes.UpdateException_-1">
          <general xmi:idref="A_Data-Classes-Exception"/>
        </generalization>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="B_Association_Data.Classes_-1">
        <ownedEnd xmi:type="uml:Property" xmi:id="B_Property_Data.Classes.._-1">
          <visibility>private</visibility>
          <type xmi:idref="A_Data-Classes-GeneralException"/>
          <association xmi:idref="B_Association_Data.Classes_-1"/>
        </ownedEnd>
        <memberEnd xmi:idref="B_Property_Data.Classes.._-1"/>
        <memberEnd xmi:idref="A_Data-Classes-GeneralException-nestedException"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Activity" xmi:id="A_Data-StructuredNodes">
      <name>StructuredNodes</name>
      <node xmi:type="uml:CreateObjectAction" xmi:id="B_CreateObjectAction_Data.StructuredNodes_-1">
        <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes.._-1">
          <outgoing xmi:idref="B_ObjectFlow_Data.StructuredNodes_-1"/>
          <type xmi:idref="A_Data-Classes-Class1"/>
        </result>
        <classifier xmi:idref="A_Data-Classes-Class1"/>
      </node>
      <node xmi:type="uml:CreateObjectAction" xmi:id="B_CreateObjectAction_Data.StructuredNodes_-2">
        <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes.._-2">
          <outgoing xmi:idref="B_ObjectFlow_Data.StructuredNodes_-2"/>
          <type xmi:idref="A_Data-Classes-Class3"/>
        </result>
        <classifier xmi:idref="A_Data-Classes-Class3"/>
      </node>
      <node xmi:type="uml:StructuredActivityNode" xmi:id="B_StructuredActivityNode_Data.StructuredNodes_-1">
        <handler xmi:type="uml:ExceptionHandler" xmi:id="B_ExceptionHandler_Data.StructuredNodes.._-1">
          <handlerBody xmi:idref="B_StructuredActivityNode_Data.StructuredNodes_-2"/>
          <exceptionType xmi:idref="A_Data-Classes-Exception"/>
          <exceptionInput xmi:idref="B_InputPin_Data.StructuredNodes.._-1"/>
        </handler>
        <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes.._-1">
          <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes...._-2">
            <outgoing xmi:idref="B_ObjectFlow__-11"/>
            <type xmi:idref="A_Data-Classes-Class2"/>
          </result>
          <target xmi:type="uml:InputPin" xmi:id="A_target-1">
            <name>target</name>
            <incoming xmi:idref="B_ObjectFlow_Data.StructuredNodes_-1"/>
            <type xmi:idref="A_Data-Classes-Class1"/>
          </target>
          <operation xmi:idref="A_Data-Classes-Class1-getCollection"/>
        </node>
        <node xmi:type="uml:ExpansionRegion" xmi:id="B_ExpansionRegion_Data.StructuredNodes.._-1">
          <node xmi:type="uml:ConditionalNode" xmi:id="B_ConditionalNode_Data.StructuredNodes...._-1">
            <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes......_-1">
              <result xmi:type="uml:OutputPin" xmi:id="A_bodyOutput">
                <name>bodyOutput</name>
                <type xmi:idref="A_Data-Classes-Class2"/>
              </result>
              <target xmi:type="uml:InputPin" xmi:id="A_target-3">
                <name>target</name>
                <incoming xmi:idref="B_ObjectFlow__-4"/>
                <type xmi:idref="A_Data-Classes-Class2"/>
              </target>
              <operation xmi:idref="A_Data-Classes-Class2-update"/>
            </node>
            <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes......_-2">
              <result xmi:type="uml:OutputPin" xmi:id="A_decider-1">
                <name>decider</name>
                <type href="http://www.omg.org/spec/UML/20090901/UML.xmi#Boolean"> </type>
              </result>
              <target xmi:type="uml:InputPin" xmi:id="A_target-2">
                <name>target</name>
                <incoming xmi:idref="B_ObjectFlow__-3"/>
                <type xmi:idref="A_Data-Classes-Class2"/>
              </target>
              <operation xmi:idref="A_Data-Classes-Class2-isUpdatable"/>
            </node>
            <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-10">
              <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-1">
                <value>1</value>
              </weight>
              <target xmi:idref="B_ExpansionNode_Data.StructuredNodes...._-1"/>
              <source xmi:idref="A_result-1"/>
            </edge>
            <result xmi:type="uml:OutputPin" xmi:id="A_result-1">
              <name>result</name>
              <outgoing xmi:idref="B_ObjectFlow__-10"/>
              <type xmi:idref="A_Data-Classes-Class2"/>
            </result>
            <clause xmi:type="uml:Clause" xmi:id="B_Clause_Data.StructuredNodes......_-1">
              <test xmi:idref="B_CallOperationAction_Data.StructuredNodes......_-2"/>
              <decider xmi:idref="A_decider-1"/>
              <bodyOutput xmi:idref="A_bodyOutput"/>
              <body xmi:idref="B_CallOperationAction_Data.StructuredNodes......_-1"/>
            </clause>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="B_ExpansionNode_Data.StructuredNodes...._-1">
            <outgoing xmi:idref="B_ObjectFlow__-1"/>
            <incoming xmi:idref="B_ObjectFlow__-10"/>
            <type xmi:idref="A_Data-Classes-Class2"/>
            <regionAsOutput xmi:idref="B_ExpansionRegion_Data.StructuredNodes.._-1"/>
          </node>
          <node xmi:type="uml:ExpansionNode" xmi:id="B_ExpansionNode_Data.StructuredNodes...._-2">
            <outgoing xmi:idref="B_ObjectFlow__-12"/>
            <incoming xmi:idref="B_ObjectFlow__-11"/>
            <type xmi:idref="A_Data-Classes-Class2"/>
            <regionAsInput xmi:idref="B_ExpansionRegion_Data.StructuredNodes.._-1"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="B_ForkNode_Data.StructuredNodes...._-1">
            <outgoing xmi:idref="B_ObjectFlow__-3"/>
            <outgoing xmi:idref="B_ObjectFlow__-4"/>
            <incoming xmi:idref="B_ObjectFlow__-12"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-1">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-5">
              <value>1</value>
            </weight>
            <target xmi:idref="A_collection"/>
            <source xmi:idref="B_ExpansionNode_Data.StructuredNodes...._-1"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-3">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-2">
              <value>1</value>
            </weight>
            <target xmi:idref="A_target-2"/>
            <source xmi:idref="B_ForkNode_Data.StructuredNodes...._-1"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-4">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-4">
              <value>1</value>
            </weight>
            <target xmi:idref="A_target-3"/>
            <source xmi:idref="B_ForkNode_Data.StructuredNodes...._-1"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-12">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-3">
              <value>1</value>
            </weight>
            <target xmi:idref="B_ForkNode_Data.StructuredNodes...._-1"/>
            <source xmi:idref="B_ExpansionNode_Data.StructuredNodes...._-2"/>
          </edge>
          <outputElement xmi:idref="B_ExpansionNode_Data.StructuredNodes...._-1"/>
          <mode>parallel</mode>
          <inputElement xmi:idref="B_ExpansionNode_Data.StructuredNodes...._-2"/>
        </node>
        <node xmi:type="uml:LoopNode" xmi:id="B_LoopNode_Data.StructuredNodes.._-1">
          <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes...._-1">
            <argument xmi:type="uml:InputPin" xmi:id="A_collection">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.StructuredNodes.......collection_UNLIMNAT-1">
                <value>*</value>
              </upperValue>
              <lowerValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.StructuredNodes.......collection_0-1"/>
              <name>collection</name>
              <incoming xmi:idref="B_ObjectFlow__-1"/>
              <type xmi:idref="A_Data-Classes-Class2"/>
            </argument>
            <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes......_-3">
              <outgoing xmi:idref="B_ObjectFlow__-13"/>
              <type xmi:idref="A_Data-Classes-Class2Iterator"/>
            </result>
            <target xmi:type="uml:InputPin" xmi:id="A_target-4">
              <name>target</name>
              <incoming xmi:idref="B_ObjectFlow__-7"/>
              <type xmi:idref="A_Data-Classes-Class2Iterator"/>
            </target>
            <operation xmi:idref="A_Data-Classes-Class2Iterator-iterate"/>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes...._-2">
            <argument xmi:type="uml:InputPin" xmi:id="A_x">
              <name>x</name>
              <incoming xmi:idref="B_ObjectFlow__-9"/>
              <type xmi:idref="A_Data-Classes-Class2"/>
            </argument>
            <target xmi:type="uml:InputPin" xmi:id="A_target-7">
              <name>target</name>
              <incoming xmi:idref="B_ObjectFlow_Data.StructuredNodes_-2"/>
              <type xmi:idref="A_Data-Classes-Class3"/>
            </target>
            <operation xmi:idref="A_Data-Classes-Class3-accumulate"/>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes...._-3">
            <result xmi:type="uml:OutputPin" xmi:id="A_decider-2">
              <name>decider</name>
              <type href="http://www.omg.org/spec/UML/20090901/UML.xmi#Boolean"> </type>
            </result>
            <target xmi:type="uml:InputPin" xmi:id="A_target-5">
              <name>target</name>
              <incoming xmi:idref="B_ObjectFlow__-5"/>
              <type xmi:idref="A_Data-Classes-Class2Iterator"/>
            </target>
            <operation xmi:idref="A_Data-Classes-Class2Iterator-done"/>
          </node>
          <node xmi:type="uml:CallOperationAction" xmi:id="B_CallOperationAction_Data.StructuredNodes...._-4">
            <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes......_-2">
              <outgoing xmi:idref="B_ObjectFlow__-9"/>
              <type xmi:idref="A_Data-Classes-Class2"/>
            </result>
            <target xmi:type="uml:InputPin" xmi:id="A_target-6">
              <name>target</name>
              <incoming xmi:idref="B_ObjectFlow__-6"/>
              <type xmi:idref="A_Data-Classes-Class2Iterator"/>
            </target>
            <operation xmi:idref="A_Data-Classes-Class2Iterator-next"/>
          </node>
          <node xmi:type="uml:CreateObjectAction" xmi:id="B_CreateObjectAction_Data.StructuredNodes...._-1">
            <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes......_-1">
              <outgoing xmi:idref="B_ObjectFlow__-7"/>
              <type xmi:idref="A_Data-Classes-Class2Iterator"/>
            </result>
            <classifier xmi:idref="A_Data-Classes-Class2Iterator"/>
          </node>
          <node xmi:type="uml:ForkNode" xmi:id="B_ForkNode_Data.StructuredNodes...._-2">
            <outgoing xmi:idref="B_ObjectFlow__-5"/>
            <outgoing xmi:idref="B_ObjectFlow__-6"/>
            <incoming xmi:idref="B_ObjectFlow__-13"/>
          </node>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-5">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-7">
              <value>1</value>
            </weight>
            <target xmi:idref="A_target-5"/>
            <source xmi:idref="B_ForkNode_Data.StructuredNodes...._-2"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-6">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-8">
              <value>1</value>
            </weight>
            <target xmi:idref="A_target-6"/>
            <source xmi:idref="B_ForkNode_Data.StructuredNodes...._-2"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-9">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-9">
              <value>1</value>
            </weight>
            <target xmi:idref="A_x"/>
            <source xmi:idref="B_OutputPin_Data.StructuredNodes......_-2"/>
          </edge>
          <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-13">
            <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-6">
              <value>1</value>
            </weight>
            <target xmi:idref="B_ForkNode_Data.StructuredNodes...._-2"/>
            <source xmi:idref="B_OutputPin_Data.StructuredNodes......_-3"/>
          </edge>
          <test xmi:idref="B_CallOperationAction_Data.StructuredNodes...._-3"/>
          <setupPart xmi:idref="B_CallOperationAction_Data.StructuredNodes...._-1"/>
          <setupPart xmi:idref="B_CreateObjectAction_Data.StructuredNodes...._-1"/>
          <loopVariableInput xmi:type="uml:InputPin" xmi:id="A_loopVariableInput">
            <name>loopVariableInput</name>
          </loopVariableInput>
          <decider xmi:idref="A_decider-2"/>
          <bodyPart xmi:idref="B_CallOperationAction_Data.StructuredNodes...._-2"/>
          <bodyPart xmi:idref="B_CallOperationAction_Data.StructuredNodes...._-4"/>
        </node>
        <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-7">
          <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-11">
            <value>1</value>
          </weight>
          <target xmi:idref="A_target-4"/>
          <source xmi:idref="B_OutputPin_Data.StructuredNodes......_-1"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-11">
          <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-10">
            <value>1</value>
          </weight>
          <target xmi:idref="B_ExpansionNode_Data.StructuredNodes...._-2"/>
          <source xmi:idref="B_OutputPin_Data.StructuredNodes...._-2"/>
        </edge>
      </node>
      <node xmi:type="uml:StructuredActivityNode" xmi:id="B_StructuredActivityNode_Data.StructuredNodes_-2">
        <node xmi:type="uml:AddStructuralFeatureValueAction" xmi:id="B_AddStructuralFeatureValueAction_Data.StructuredNodes.._-1">
          <structuralFeature xmi:idref="A_Data-Classes-GeneralException-nestedException"/>
          <object xmi:type="uml:InputPin" xmi:id="A_object">
            <name>object</name>
            <incoming xmi:idref="B_ObjectFlow__-2"/>
            <type xmi:idref="A_Data-Classes-GeneralException"/>
          </object>
          <value xmi:type="uml:InputPin" xmi:id="A_value">
            <name>value</name>
            <incoming xmi:idref="B_ObjectFlow__-8"/>
            <type xmi:idref="A_Data-Classes-Exception"/>
          </value>
          <result xmi:type="uml:OutputPin" xmi:id="A_result-2">
            <name>result</name>
            <outgoing xmi:idref="B_ObjectFlow__-14"/>
            <type xmi:idref="A_Data-Classes-GeneralException"/>
          </result>
        </node>
        <node xmi:type="uml:CreateObjectAction" xmi:id="B_CreateObjectAction_Data.StructuredNodes.._-1">
          <result xmi:type="uml:OutputPin" xmi:id="B_OutputPin_Data.StructuredNodes...._-1">
            <outgoing xmi:idref="B_ObjectFlow__-2"/>
            <type xmi:idref="A_Data-Classes-GeneralException"/>
          </result>
          <classifier xmi:idref="A_Data-Classes-GeneralException"/>
        </node>
        <node xmi:type="uml:InputPin" xmi:id="B_InputPin_Data.StructuredNodes.._-1">
          <outgoing xmi:idref="B_ObjectFlow__-8"/>
          <type xmi:idref="A_Data-Classes-Exception"/>
        </node>
        <node xmi:type="uml:RaiseExceptionAction" xmi:id="B_RaiseExceptionAction_Data.StructuredNodes.._-1">
          <exception xmi:type="uml:InputPin" xmi:id="B_InputPin_Data.StructuredNodes...._-1">
            <incoming xmi:idref="B_ObjectFlow__-14"/>
            <type xmi:idref="A_Data-Classes-GeneralException"/>
          </exception>
        </node>
        <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-2">
          <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-13">
            <value>1</value>
          </weight>
          <target xmi:idref="A_object"/>
          <source xmi:idref="B_OutputPin_Data.StructuredNodes...._-1"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-8">
          <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-14">
            <value>1</value>
          </weight>
          <target xmi:idref="A_value"/>
          <source xmi:idref="B_InputPin_Data.StructuredNodes.._-1"/>
        </edge>
        <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow__-14">
          <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_._1-12">
            <value>1</value>
          </weight>
          <target xmi:idref="B_InputPin_Data.StructuredNodes...._-1"/>
          <source xmi:idref="A_result-2"/>
        </edge>
      </node>
      <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow_Data.StructuredNodes_-1">
        <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.StructuredNodes.._1-1">
          <value>1</value>
        </weight>
        <target xmi:idref="A_target-1"/>
        <source xmi:idref="B_OutputPin_Data.StructuredNodes.._-1"/>
      </edge>
      <edge xmi:type="uml:ObjectFlow" xmi:id="B_ObjectFlow_Data.StructuredNodes_-2">
        <weight xmi:type="uml:LiteralUnlimitedNatural" xmi:id="L_Data.StructuredNodes.._1-2">
          <value>1</value>
        </weight>
        <target xmi:idref="A_target-7"/>
        <source xmi:idref="B_OutputPin_Data.StructuredNodes.._-2"/>
      </edge>
    </packagedElement>
  </uml:Model>
</xmi:XMI>
